<mat-card>
  <mat-card-header>
    <h1>User Registration</h1>
  </mat-card-header>

  <mat-card-content>
    <form class="example-form" [formGroup]="registrationForm" (ngSubmit)="proceedRegister()">

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>User Name</mat-label>
          <input matInput formControlName="userName">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>Password</mat-label>
          <input matInput type="password" formControlName="password">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>First Name</mat-label>
          <input matInput formControlName="firstName">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>Last Name</mat-label>
          <input matInput formControlName="lastName">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>Date of Birth</mat-label>
          <input matInput type="date" formControlName="dateOfBirth">
        </mat-form-field>
      </div>

      <div>
        <mat-radio-group formControlName="gender" aria-label="Gender">
          <mat-radio-button value="male">Male</mat-radio-button>
          <mat-radio-button value="female">Female</mat-radio-button>
        </mat-radio-group>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>Email</mat-label>
          <input matInput formControlName="email">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>Phone</mat-label>
          <input matInput formControlName="phone">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>House Number</mat-label>
          <input matInput formControlName="houseNumber">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>Street Name</mat-label>
          <input matInput formControlName="streetName">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>City</mat-label>
          <input matInput formControlName="city">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>State</mat-label>
          <input matInput formControlName="state">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>Zip Code</mat-label>
          <input matInput formControlName="zipCode">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>Country</mat-label>
          <input matInput formControlName="country">
        </mat-form-field>
      </div>

      <div>
        <button mat-raised-button color="primary">Submit</button>
        <a routerLink="/login" mat-raised-button color="accent">Back to Login</a>
      </div>

    </form>
  </mat-card-content>
</mat-card>


import { Component } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { ToastrService } from "ngx-toastr";
import { AuthService } from "../service/auth.service";
import { Router } from "@angular/router";

@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent {
  constructor(
    private builder: FormBuilder,
    private toastr:ToastrService,
    private service:AuthService,
    private router:Router) {
  }

  registrationForm = this.builder.group({
    userName: ['', Validators.required],
    password: ['', Validators.required],
    firstName: ['', Validators.required],
    lastName: ['', Validators.required],
    dateOfBirth: ['', Validators.required],
    gender: ['male', Validators.required],
    email: ['', [Validators.required, Validators.email]],
    phone: ['', Validators.required],
    houseNumber: ['', Validators.required],
    streetName: ['', Validators.required],
    city: ['', Validators.required],
    state: ['', Validators.required],
    zipCode: ['', Validators.required],
    country: ['', Validators.required],
    role:[''],
    isActive: [false],
  });


  proceedRegister() {
    if (this.registrationForm.valid) {
      this.service.proceedRegister(this.registrationForm.value).subscribe(response => {
        this.toastr.success('Registration Successful');
        this.router.navigate(['/login']);
      });
    }
    else{
      this.toastr.error('Registration Failed');
    }
  }
}

<mat-card>
  <mat-card-header>
    <h1>Use Login</h1>
  </mat-card-header>

  <mat-card-content>
    <form class="example-form" [formGroup]="loginForm" (ngSubmit)="proceedLogin()">

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>User Name</mat-label>
          <input matInput formControlName="userName">
        </mat-form-field>
      </div>

      <div>
        <mat-form-field class="example-full-width">
          <mat-label>Password</mat-label>
          <input matInput type="password" formControlName="password">
        </mat-form-field>
      </div>

      <div>
        <button mat-raised-button color="primary">Submit</button>
        <a routerLink="/register" mat-raised-button color="accent">New User?</a>
      </div>

    </form>
  </mat-card-content>
</mat-card>


import { Component } from '@angular/core';
import {FormBuilder, Validators} from "@angular/forms";
import {ToastrService} from "ngx-toastr";
import {AuthService} from "../service/auth.service";
import {Router} from "@angular/router";

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent {

  constructor(
    private builder: FormBuilder,
    private toastr:ToastrService,
    private service:AuthService,
    private router:Router) {
    sessionStorage.clear();
  }

  loginForm=this.builder.group({
    userName:this.builder.control('', Validators.required),
    password:this.builder.control('', Validators.required),
  });

  userdata:any;

  proceedLogin() {
    if (this.loginForm.valid) {
      this.service.getByCode(this.loginForm.value.userName).subscribe(response => {

        if (Array.isArray(response) && response.length) {
          this.userdata = response[0]; // Get the first user from the array response
        } else {
          this.toastr.error('Invalid username');
          return;
        }

        if(this.userdata.password === this.loginForm.value.password){

          if(this.userdata.isActive === true){
            sessionStorage.setItem('userName', this.userdata.userName);
            sessionStorage.setItem('userName', this.userdata.role);
            this.router.navigate(['']);

          }else{
            this.toastr.error('Please contact admin', 'In Active User')
          }

        }else{
          this.toastr.error('Invalid credentials');
        }
      })
    }
  }
}
